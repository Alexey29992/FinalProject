package com.repairagency.database.dao;

import com.repairagency.bean.AbstractBean;
import com.repairagency.database.QueryGetData;
import com.repairagency.exception.DBException;

import java.util.List;

/**
 * Data Access Object (DAO) interface. All realizations of DAO should implement it.
 * Contains common methods to work with beans and database (CRUD operations)
 * @param <T> type of bean
 */
public interface Dao<T extends AbstractBean> {

    /**
     * Inserts given {@link T} entity in the database
     * @param entity entity to be inserted in the database
     * @return autogenerated ID of the inserted Entity
     * @throws DBException if internal database errors occur
     */
    int addEntity(T entity) throws DBException;

    /**
     * Updates the database with given {@link T} entity info.
     * Nothing changes if given entity does not exist in the database.
     * @param entity entity to be updated in the database
     * @throws DBException if internal database errors occur
     */
    void updateEntity(T entity) throws DBException;

    /**
     * Deletes data of the {@link T} entity with given ID from the database
     * @param id ID of the entity to be deleted
     * @throws DBException if internal database errors occur
     */
    void removeEntity(int id) throws DBException;

    /**
     * Receives {@link List} of {@link T} entities from the database according to queryData
     * @param queryData QueryGetData instance that contains information to get desired
     *                  entity list from the database
     * @return List of the entities according to queryData.
     * @throws DBException if internal database errors occur
     */
    List<T> getEntityList(QueryGetData queryData) throws DBException;

}
